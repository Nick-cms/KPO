from devices.lighting.smart_light import SmartLight
from devices.climate.thermostat import Thermostat
from devices.security.security_camera import SecurityCamera
from services.logging_service import LoggingService

class DeviceManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏"""
    
    def __init__(self):
        self.logging_service = LoggingService()
        self.devices = {}
        self._initialize_devices()
        
    def _initialize_devices(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        self.add_device(SmartLight("lamp_living_room", "–°–≤–µ—Ç –≤ –≥–æ—Å—Ç–∏–Ω–æ–π"))
        self.add_device(Thermostat("thermostat", "–¢–µ—Ä–º–æ—Å—Ç–∞—Ç"))
        self.add_device(SecurityCamera("security_camera", "–ö–∞–º–µ—Ä–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"))
        
    def add_device(self, device):
        """–î–æ–±–∞–≤–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ"""
        self.devices[device.device_id] = device
        self.logging_service.info("DEVICE", f"‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device.name}")
        
    def get_device(self, device_id: str):
        """–ü–æ–ª—É—á–∏—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ ID"""
        return self.devices.get(device_id)
    
    def send_command(self, device_id: str, action: str) -> bool:
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É"""
        device = self.get_device(device_id)
        if device:
            if action == "on":
                return device.turn_on()
            elif action == "off":
                return device.turn_off()
            elif action == "toggle":
                if device.state == "on":
                    return device.turn_off()
                else:
                    return device.turn_on()
        return False
    
    def check_device_changes(self):
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π —É—Å—Ç—Ä–æ–π—Å—Ç–≤"""
        for device_id, device in self.devices.items():
            if device.has_state_changed():
                state_text = "–≤–∫–ª—é—á–µ–Ω–æ" if device.state == "on" else "–≤—ã–∫–ª—é—á–µ–Ω–æ"
                self.logging_service.info("DEVICE", 
                    f"üîÑ {device.name} {state_text}")