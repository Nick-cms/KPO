import os
import time

class ConsoleInterface:
    def __init__(self, home_controller):
        self.controller = home_controller
        
    def display_main_menu(self):
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        while self.controller.running:
            os.system('clear')
            self._show_system_status()
            
            print("\nüéÆ –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–û–ô:")
            print("=" * 40)
            print("1. üí° –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ–º")
            print("2. üå°Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–æ–º") 
            print("3. üìπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é")
            print("4. üìä –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã")
            print("5. üé¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏")
            print("6. üö™ –í—ã—Ö–æ–¥")
            print("=" * 40)
            
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-6): ").strip()
            self._handle_menu_choice(choice)
    
    def _show_system_status(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
        print("\nüè† –°–ò–°–¢–ï–ú–ê –£–ú–ù–´–ô –î–û–ú - –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø")
        print("=" * 50)
        
        print("\nüìä –°–û–°–¢–û–Ø–ù–ò–ï –£–°–¢–†–û–ô–°–¢–í:")
        for device_id, device in self.controller.device_manager.devices.items():
            state_icon = "üí°" if device.state == "on" else "‚ö´"
            state_text = "–í–ö–õ–Æ–ß–ï–ù" if device.state == "on" else "–í–´–ö–õ–Æ–ß–ï–ù"
            print(f"{state_icon} {device.name}: {state_text}")
    
    def _handle_menu_choice(self, choice):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤ –º–µ–Ω—é"""
        if choice == "1":
            self._manage_lighting()
        elif choice == "2":
            self._manage_climate()
        elif choice == "3":
            self._manage_security()
        elif choice == "4":
            self._show_logs()
        elif choice == "5":
            self._run_demo_scenario()
        elif choice == "6":
            self.controller.stop_system()
        else:
            input("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ù–∞–∂–º–∏—Ç–µ Enter...")
    
    def _manage_lighting(self):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ–º"""
        while True:
            os.system('clear')
            device = self.controller.device_manager.get_device("lamp_living_room")
            current_state = "–í–ö–õ–Æ–ß–ï–ù" if device.state == "on" else "–í–´–ö–õ–Æ–ß–ï–ù"
            
            print(f"üí° –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–í–ï–¢–û–ú –í –ì–û–°–¢–ò–ù–û–ô")
            print("=" * 40)
            print(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
            print("\n1. –í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç")
            print("2. –í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç")
            print("3. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç")
            print("4. –ù–∞–∑–∞–¥")
            
            sub_choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
            
            if sub_choice == "1":
                self.controller.device_manager.send_command("lamp_living_room", "on")
                print("üí° –°–≤–µ—Ç –≤–∫–ª—é—á–µ–Ω!")
            elif sub_choice == "2":
                self.controller.device_manager.send_command("lamp_living_room", "off")
                print("‚ö´ –°–≤–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω!")
            elif sub_choice == "3":
                self.controller.device_manager.send_command("lamp_living_room", "toggle")
                new_state = "–≤–∫–ª—é—á–µ–Ω" if device.state == "on" else "–≤—ã–∫–ª—é—á–µ–Ω"
                print(f"üîÅ –°–≤–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω: {new_state}")
            elif sub_choice == "4":
                break
            else:
                input("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ù–∞–∂–º–∏—Ç–µ Enter...")
            
            time.sleep(1)
    
    def _manage_climate(self):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–æ–º"""
        while True:
            os.system('clear')
            device = self.controller.device_manager.get_device("thermostat")
            current_state = "–í–ö–õ–Æ–ß–ï–ù" if device.state == "on" else "–í–´–ö–õ–Æ–ß–ï–ù"
            
            print(f"üå°Ô∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï –¢–ï–†–ú–û–°–¢–ê–¢–û–ú")
            print("=" * 40)
            print(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
            print(f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {device.temperature}¬∞C")
            print("\n1. –í–∫–ª—é—á–∏—Ç—å —Ç–µ—Ä–º–æ—Å—Ç–∞—Ç")
            print("2. –í—ã–∫–ª—é—á–∏—Ç—å —Ç–µ—Ä–º–æ—Å—Ç–∞—Ç")
            print("3. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ—Ä–º–æ—Å—Ç–∞—Ç")
            print("4. –ù–∞–∑–∞–¥")
            
            sub_choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
            
            if sub_choice == "1":
                self.controller.device_manager.send_command("thermostat", "on")
                print("üå°Ô∏è –¢–µ—Ä–º–æ—Å—Ç–∞—Ç –≤–∫–ª—é—á–µ–Ω!")
            elif sub_choice == "2":
                self.controller.device_manager.send_command("thermostat", "off")
                print("üå°Ô∏è –¢–µ—Ä–º–æ—Å—Ç–∞—Ç –≤—ã–∫–ª—é—á–µ–Ω!")
            elif sub_choice == "3":
                self.controller.device_manager.send_command("thermostat", "toggle")
                new_state = "–≤–∫–ª—é—á–µ–Ω" if device.state == "on" else "–≤—ã–∫–ª—é—á–µ–Ω"
                print(f"üîÅ –¢–µ—Ä–º–æ—Å—Ç–∞—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω: {new_state}")
            elif sub_choice == "4":
                break
            else:
                input("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ù–∞–∂–º–∏—Ç–µ Enter...")
            
            time.sleep(1)
    
    def _manage_security(self):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é"""
        while True:
            os.system('clear')
            device = self.controller.device_manager.get_device("security_camera")
            current_state = "–í–ö–õ–Æ–ß–ï–ù–ê" if device.state == "on" else "–í–´–ö–õ–Æ–ß–ï–ù–ê"
            
            print(f"üìπ –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–ú–ï–†–û–ô –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
            print("=" * 40)
            print(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {current_state}")
            print("\n1. –í–∫–ª—é—á–∏—Ç—å –∫–∞–º–µ—Ä—É")
            print("2. –í—ã–∫–ª—é—á–∏—Ç—å –∫–∞–º–µ—Ä—É")
            print("3. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∫–∞–º–µ—Ä—É")
            print("4. –ù–∞–∑–∞–¥")
            
            sub_choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
            
            if sub_choice == "1":
                self.controller.device_manager.send_command("security_camera", "on")
                print("üìπ –ö–∞–º–µ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞!")
            elif sub_choice == "2":
                self.controller.device_manager.send_command("security_camera", "off")
                print("üìπ –ö–∞–º–µ—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞!")
            elif sub_choice == "3":
                self.controller.device_manager.send_command("security_camera", "toggle")
                new_state = "–≤–∫–ª—é—á–µ–Ω–∞" if device.state == "on" else "–≤—ã–∫–ª—é—á–µ–Ω–∞"
                print(f"üîÅ –ö–∞–º–µ—Ä–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞: {new_state}")
            elif sub_choice == "4":
                break
            else:
                input("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ù–∞–∂–º–∏—Ç–µ Enter...")
            
            time.sleep(1)
    
    def _show_logs(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã"""
        print("\nüìã –õ–û–ì–ò –°–ò–°–¢–ï–ú–´:")
        print("=" * 50)
        print("–§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
    
    def _run_demo_scenario(self):
        """–ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è"""
        print("\nüé¨ –ó–ê–ü–£–°–ö –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–û–ù–ù–û–ì–û –°–¶–ï–ù–ê–†–ò–Ø...")
        
        steps = [
            ("lamp_living_room", "on", "–í–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–∞ –≤ –≥–æ—Å—Ç–∏–Ω–æ–π"),
            ("thermostat", "on", "–í–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ—Ä–º–æ—Å—Ç–∞—Ç–∞"),
            ("security_camera", "on", "–í–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"),
            ("lamp_living_room", "off", "–í—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–≤–µ—Ç–∞ –≤ –≥–æ—Å—Ç–∏–Ω–æ–π"),
            ("thermostat", "off", "–í—ã–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ—Ä–º–æ—Å—Ç–∞—Ç–∞"),
        ]
        
        for device_id, action, description in steps:
            print(f"\nüéØ {description}...")
            self.controller.device_manager.send_command(device_id, action)
            time.sleep(2)
        
        print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω!")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")