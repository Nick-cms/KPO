import os
from services.logging_service import LoggingService

class ConsoleInterface:
    """–ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π"""
    
    def __init__(self, home_controller):
        self.controller = home_controller
        self.logging_service = LoggingService()
        
    def display_main_menu(self):
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        while self.controller.running:
            os.system('clear')
            self._show_system_status()
            
            print("\nüéÆ –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–û–ô:")
            print("=" * 40)
            print("1. üí° –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ–º")
            print("2. üå°Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–æ–º")
            print("3. üìπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é")
            print("4. üìä –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã")
            print("5. üé¨ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏")
            print("6. üö™ –í—ã—Ö–æ–¥")
            print("=" * 40)
            
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-6): ").strip()
            self._handle_menu_choice(choice)
    
    def _show_system_status(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
        print("\n" + "üè†" + "="*58 + "üè†")
        print("              –°–ò–°–¢–ï–ú–ê –£–ú–ù–´–ô –î–û–ú - –ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø")
        print("üè†" + "="*58 + "üè†")
        
        print("\nüìä –°–û–°–¢–û–Ø–ù–ò–ï –£–°–¢–†–û–ô–°–¢–í:")
        print("-" * 60)
        for device_id, device in self.controller.device_manager.devices.items():
            state_icon = "üí°" if device.state == "on" else "‚ö´"
            state_text = "–í–ö–õ–Æ–ß–ï–ù" if device.state == "on" else "–í–´–ö–õ–Æ–ß–ï–ù"
            print(f"{state_icon} {device.name}: {state_text}")
    
    def _handle_menu_choice(self, choice):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤ –º–µ–Ω—é"""
        menu_actions = {
            "1": self._manage_lighting,
            "2": self._manage_climate,
            "3": self._manage_security,
            "4": self._show_logs,
            "5": self._run_demo_scenario,
            "6": self._exit_system
        }
        
        action = menu_actions.get(choice)
        if action:
            action()
        else:
            input("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ù–∞–∂–º–∏—Ç–µ Enter...")
    
    def _exit_system(self):
        """–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
        self.controller.stop_system()